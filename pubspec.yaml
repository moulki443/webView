name: webview_app
description: "Un nouveau projet Flutter."
# La ligne suivante empêche la publication accidentelle du package sur
# pub.dev via `flutter pub publish`. C'est préférable pour les packages privés.
publish_to: 'none' # Retirez cette ligne si vous souhaitez publier sur pub.dev

# La ligne suivante définit la version et le numéro de build de votre application.
# Un numéro de version est composé de trois chiffres séparés par des points, comme 1.2.43,
# suivi d'un numéro de build optionnel séparé par un +.
# En Android, le numéro de version est utilisé comme `versionName` tandis que le numéro de build est utilisé comme `versionCode`.
# Lisez plus sur la gestion des versions Android ici : https://developer.android.com/studio/publish/versioning
# En iOS, le numéro de version est utilisé comme `CFBundleShortVersionString` et le numéro de build comme `CFBundleVersion`.
# Lisez plus sur la gestion des versions iOS ici :
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# En Windows, `build-name` est utilisé pour les parties majeures, mineures et de patch
# de la version du produit et du fichier, tandis que `build-number` est utilisé pour le suffixe de build.
version: 1.0.0+1

environment:
  sdk: ^3.7.0

# Les dépendances spécifient d'autres packages nécessaires pour que votre package fonctionne.
# Pour mettre à jour automatiquement vos dépendances à la dernière version,
# vous pouvez exécuter `flutter pub upgrade --major-versions`. Vous pouvez également
# mettre à jour manuellement les versions ci-dessous avec la dernière version disponible.
# Pour voir les versions plus récentes des dépendances, exécutez `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter

  # Icônes Cupertino pour les icônes de style iOS
  cupertino_icons: ^1.0.8

  # WebView intégré et lancement d'URL pour ouvrir des liens
  flutter_inappwebview: ^6.1.5
  url_launcher: ^6.3.1
  http: ^1.3.0  # Utilisez une version cohérente pour http
  firebase_core: ^3.12.1
  pin_code_fields: ^8.0.1
  sms_autofill: ^2.4.1
  shared_preferences: ^2.5.3

  # Packages pour la connexion via les réseaux sociaux


dev_dependencies:
  flutter_test:
    sdk: flutter

  # Le package "flutter_lints" contient un ensemble de règles de lint recommandées pour encourager
  # de bonnes pratiques de codage. L'ensemble de lint est activé dans le fichier `analysis_options.yaml`
  # situé à la racine de votre package. Consultez ce fichier pour plus d'informations sur
  # l'activation ou la désactivation de règles spécifiques.
  flutter_lints: ^5.0.0

flutter:

  # Cette ligne garantit que la police des icônes Material est incluse
  # dans votre application, vous permettant d'utiliser les icônes de la classe Material Icons.
  uses-material-design: true

  # Pour ajouter des ressources à votre application, ajoutez une section assets, comme ceci :
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # Une ressource d'image peut faire référence à plusieurs variantes spécifiques à la résolution,
  # consultez https://flutter.dev/to/resolution-aware-images

  # Pour plus de détails sur l'ajout de ressources provenant des dépendances de packages, consultez
  # https://flutter.dev/to/asset-from-package

  # Pour ajouter des polices personnalisées à votre application, ajoutez une section fonts ici,
  # dans cette section "flutter". Chaque entrée dans cette liste doit avoir une clé "family"
  # avec le nom de la famille de polices et une clé "fonts" avec une liste d'assets et autres descripteurs pour la police.
  # Exemple :
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # Pour plus de détails sur les polices provenant des dépendances de packages,
  # consultez https://flutter.dev/to/font-from-package
